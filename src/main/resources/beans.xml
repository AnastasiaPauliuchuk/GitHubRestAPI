<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <jdbc:embedded-database id="dataSource" type="DERBY">
        <jdbc:script location="classpath:scripts/create_data_model.sql"/>
    </jdbc:embedded-database>

    <context:property-placeholder location="classpath:settings.properties"  order="1" ignore-unresolvable="true" />
    <context:property-placeholder location="classpath:jdbc.properties"  order="2" ignore-unresolvable="true" />

    <bean id="pullRequestsDataManager" class="agent.PullRequestsDataManager"/>

    <bean id="gitHubApiManager" class="githubapi.GitHubApiManager">
        <constructor-arg type="java.lang.String" value="${authToken}"/>
        <constructor-arg type="java.lang.String" value="${repositoryOwner}"/>
        <constructor-arg type="java.lang.String" value="${repositoryName}"/>
        <property name="jsonPullRequestDataParser" ref="jsonPullRequestDataParser"/>
    </bean>

    <bean id="jsonPullRequestDataParser" class="json.JsonPullRequestDataParser"/>


    <bean id="jenkinsManager" class="agent.JenkinsManager">
        <constructor-arg type="java.lang.String" value="${jenkinsToken}"/>
        <constructor-arg type="java.lang.String" value="${jenkinsPostUrl}"/>
    </bean>


    <bean id="baseGitHubTask" class="agent.GitHubToJenkinsTask">
        <property name="pullRequestsDataManager" ref="pullRequestsDataManager"/>
        <property name="gitHubApiManager" ref="gitHubApiManager"/>
        <property name="jenkinsManager" ref="jenkinsManager"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven/>

    <context:component-scan base-package="com.devblogs" />

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.devblogs.model"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>


    <beans profile="withDB">
        <bean id="gitHubTask" class="agent.GitHubToJenkinsTask" parent="baseGitHubTask">

            <property name="dbManager" ref="dbManager"/>
        </bean>

        <bean id="dbManager" class="db.DbPullRequestDataManager">
            <property name = "dataSource" ref="dataSource"/>
        </bean>


        <bean id="dataSource" class="db.DataSource"  >
            <constructor-arg type="java.lang.String" value="${jdbc.url}"/>
            <constructor-arg type="java.lang.String" value="${jdbc.login}"/>
            <constructor-arg type="java.lang.String" value="${jdbc.password}"/>
        </bean>
    </beans>

    <beans profile="withoutDB">
        <bean id="gitHubTask" class="agent.GitHubToJenkinsTask" parent="baseGitHubTask">

        </bean>
    </beans>




</beans>